#!/bin/sh -e
### BEGIN INIT INFO
# Provides:          ptp
# Required-Start:    $st2110
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Start linuxptp
### END INIT INFO
# This header allows systemd to create a service.

# To enable the initscript on SYSV init system:
#  Copy to /etc/init.d/ptp with root ownership
#  $ update-rc.d ptp defaults
#  $ systemctl enable ptp
#  $ systemctl start ptp

log_ptp()
{
    logger -t ptp "$@"
}

ST2110_CONF_FILE=/etc/st2110.conf
if [ -f $ST2110_CONF_FILE ]; then
    . $ST2110_CONF_FILE
fi

PTP_CONFIG=/etc/linuxptp/ptp4l.conf
PTP_DOMAIN=$(sed -n 's/^domainNumber\t\+\([0-9]*\)/\1/p' $PTP_CONFIG)
PTP_PTP4L_PID=/var/run/ptp4l.pid
PTP_PHC2SYS_PID=/var/run/phc2sys.pid

start_ptp_sync()
{
    if [ -z $1 -o -z $2 ]; then return; fi
    master=$1
    slave=$2

    start-stop-daemon --start --background -m --oknodo --pidfile $PTP_PHC2SYS_PID.$slave --exec /usr/local/sbin/phc2sys -- -u 16 -s $master -c $slave -w -n $PTP_DOMAIN
}

start_ptp()
{
    if [ -z $PTP_IFACE_0 ]; then
        log_ptp "Start linuxptp: fail, no interface"
        return;
    fi

    log_ptp "Start linuxptp"
    start-stop-daemon --start --background -m --oknodo --pidfile $PTP_PTP4L_PID --exec /usr/local/sbin/ptp4l -- -f $PTP_CONFIG -s -i $PTP_IFACE_0

    # Sync sys clock with NIC clock
    start_ptp_sync $PTP_IFACE_0 'CLOCK_REALTIME'

    # Manage 2 ports with 2 phc2sys (1st iface is master for both sys
    # clock and 2nd iface). But is it better to have 2 instances of
    # ptp4l instead? phc2sys would dynamically choose between the 2 ifaces
    start_ptp_sync $PTP_IFACE_0 $PTP_IFACE_1
}

stop_ptp_sync()
{
    if [ -z $1 ]; then return; fi
    slave=$1

    start-stop-daemon --stop --pidfile $PTP_PHC2SYS_PID.$slave --oknodo
}

stop_ptp()
{
    log_ptp "Stop linuxptp"
    start-stop-daemon --stop --pidfile $PTP_PTP4L_PID --oknodo

    stop_ptp_sync 'CLOCK_REALTIME'
    stop_ptp_sync $PTP_IFACE_1

    rm -f $PTP_PHC2SYS_PID* $PTP_PTP4L_PID
}

monitor_ptp()
{
    journalctl -xef | grep "phc2sys\|ptp4l"
}

usage()
{
    echo "Usage: $0 {start|stop|log}"
}
case "$1" in
    start)
        start_ptp
        ;;
    stop)
        stop_ptp
        ;;
    log)
        monitor_ptp
        ;;
    *)
        usage
        exit 1
        ;;
esac

exit 0
